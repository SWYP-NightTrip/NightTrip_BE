version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/nighttrip
      - SPRING_DATASOURCE_USERNAME=nightuser
      - SPRING_DATASOURCE_PASSWORD=dkcladmsqkfrek@!09
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: nightuser
      POSTGRES_PASSWORD: dkcladmsqkfrek@!09
      POSTGRES_DB: nighttrip
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nightuser -d nighttrip || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s  # 초기화 여유 시간
  redis:
    image: redis:7.2
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health?timeout=5s | grep -q '\"status\":\"yellow\"\\|\"status\":\"green\"'"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 60s

  kibana:
    image: kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:5601/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  esdata:
  redisdata:
